
/*********************************************************************************************/
【*】程序简介

-工程名称：外部中断
-实验平台: 野火STM32-F103 指南者 开发板 
-ST固件库版本：3.5.0

【 ！】功能简介：
通过中断方式，来控制LED 灯




【 ！】实验操作：
编译并下载程序到开发板并复位，LED灯是处于熄灭状态，按下KEY 1 时，红灯亮起，再按一次，红灯熄灭，按下KEY 2 后松手时，绿灯亮起，再次按下松手时，绿灯熄灭。（实验现象和按键检测的差不多，只是按键检测设置那里复位点亮）

这两者最主要的区别是：使用中断方式后，CPU 不用轮询按键

/*********************************************************************************************/


【*】 引脚分配
按键：
	KEY1<--->PA0
				开始时，按键未按下时处于低电平状态
	KEY2<--->PC13
	
LED：
	LED_R<-----> PB5
	LED_G<-----> PB0
	LED_B<-----> PB1（本实验未使用）

	对应引脚低电平则LED灯亮。
	
【&】程序描述：***bsp为Board Support Packet  (板级支持包）的缩写，每次文件命名都以这个开头是为了后面方便移植***
	   < bsp_exti.h >

	1.宏定义按键对应的GPIO端口、GPIO时钟、GPIO引脚
	2.宏定义EXTI中断事件线输入源的AFIO 时钟、端口、引脚，
	  定义其对应的具体中断事件线编号
	3.宏定义我们的按键中断函数为对应的EXTI中断函数
	            					
       <bsp_exti.c>:	
	 
- 配置NVIC（中断配置固件库）

	1.引用结构体
	2.配置NVIC的优先级分组
	3.配置中断源、抢占优先级、子优先级
	4.使能中断通道
	5.初始化NVIC

- 配置EXTI

	1.引用GPIO和EXTI结构体
	2.开启GPIO和APIO时钟（已在对应头文件引入）
	3.调用NVIC配置函数
	4.配置按键要用到的GPIO及GPIO的模式，并初始化GPIO
	5.指定EXTI的信号源，配置其端口和引脚
	6.配置具体中断事件线、EXTI模式、触发类型，并使能中断
	7.初始化EXTI
	在这其中KEY1和KEY2的配置中，按键2基本上采用与按键1相关参数配置，只是按键2为下降沿触发方式，按键1为上升沿触发

       <main.c>:

	1.调用LED的GPIO的初始化函数
	2.调用中断的初始化函数
	3.设置死循环，等待中断发生
	       		
											
       <bsp_led.c> <bsp_led.h>和【使用固件库点亮LED灯】这一章节的设置一样


/*********************************************************************************************/

【*】 联系我们

-野火官网  :https://embedfire.com
-野火论坛  :http://www.firebbs.cn
-野火商城  :https://yehuosm.tmall.com/
-野火资料下载中心：http://doc.embedfire.com/products/link

/*********************************************************************************************/
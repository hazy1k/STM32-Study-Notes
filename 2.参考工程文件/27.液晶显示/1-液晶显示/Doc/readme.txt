/*********************************************************************************************/
本文档使用 TAB = 4 对齐，使用keil5默认配置打开阅读比较方便。

【*】程序简介

-工程名称：液晶显示
-实验平台: 野火STM32 指南者 开发板 
-ST固件库版本：3.5

【 ！】功能简介：
驱动3.2_2.8寸液晶屏，显示文字、绘制各种图形。

学习目的：学习如何使用液晶屏显示。

【 ！】实验操作：
连接好配套的3.2_2.8寸液晶屏，下载程序后复位开发板即可，屏幕会绘制文字及图形。

【*】注意事项：
本程序不支持中文，显示中文的程序请学习下一章
2.8寸 屏幕芯片：ILI9341
3.2寸 屏幕芯片：ST7789V（现在生产使用）
开发板配套程序里已做兼容ILI9341和ST7789V（例程中的 LCD 函数仍以 ILI9341 为前缀命名）
高型号 STM32（如 STM32VET6/STM32ZET6 等）具有 FSMC 外设，直接使用 FSMC 接口实现 8080 时序
定义一个指向这些地址的指针，然后就可以通过指针直接修改该存储单元的内容，
FSMC 外设会自动完成数据访问过程，读写命令之类的操作不需要程序控制。

白屏条纹问题：
若是发现显示白屏的时候屏幕有明显条纹，可更改液晶屏内部的 Power control A (CBh) 寄存器的第5个参数，
将该参数的值改到最大0x06，就不会有白屏条纹了。程序里已默认改为最大0x06。

/***************************************************************************************************************/

【*】 引脚分配

液晶屏：
液晶屏接口与STM32的FSMC接口相连，支持565格式，
使用FSMC产生8080时序与液晶屏驱动芯片ILI9341通讯.

		/*液晶控制信号线*/
		ILI9341_CS 	<--->	PD7      	//片选，选择NOR/SRAM块 BANK1_NOR/SRAM1
		ILI9341_DC  <---> 	PD11        //PD11为FSMC_A16,本引脚决定了访问LCD时使用的地址
		ILI9341_WR 	<---> 	PD5			//写使能
		ILI9341_RD 	<---> 	PD4			//读使能
		ILI9341_RST	<---> 	PE1			//复位引脚
		ILI9341_BK 	<---> 	PD12 		//背光引脚
		
	数据信号线省略,本实验没有驱动触摸屏，详看触摸画板实验。

串口（TTL-USB TO USART）：
CH340的收发引脚与STM32的发收引脚相连。
	CH340  RXD  <----->  USART1  TX  (PA9)
	CH340  TXD  <----->  USART1  RX  (PA10)
												
/*********************************************************************************************/

【*】程序描述

< bsp_ili9341_lcd.h >

	1.ILI9341 显示屏的 FSMC 参数定义 
	2.ILI9341 显示屏8080通讯引脚定义
	3.ILI934 显示区域的起始坐标和总行列数的宏定义
	4.定义 ILI934 显示屏常用颜色
	5.定义 ILI934 常用命令
	6.声明 ILI934 函数

 * 此处连接的是BANK1_NOR/SRAM4，因此地址为0X6C00 0000 ~ 0X6FFF FFFF
   FSMC_A16 地址线为高电平，实质是输出地址信号的第 16 位为 1，
   使FSMC_A16 地址线为低电平，实质是输出地址信号的第 16 位为 0 即可

< bsp_ili9341_lcd.c >

	1.向ILI9341写入命令
	2.向ILI9341写入数据
	3.从ILI9341读取数据
	4.延时函数定义
	5.初始化ILI9341的IO引脚
	6.LCD  FSMC 模式配置	（无关的配置都设为零）
	7.初始化ILI9341寄存器
	8.LI9341初始化函数，如果要用到lcd，一定要调用这个函数
	9.ILI9341背光LED控制
	10.ILI9341 软件复位
	11.设置ILI9341的GRAM的扫描方向 
	12.在ILI9341显示器上开辟一个窗口
	13.设定ILI9341的光标坐标
	14.在ILI9341显示器上以某一颜色填充像素点
	15.对ILI9341显示器的某一窗口以某种颜色进行清屏
	16.对ILI9341显示器的某一点以某种颜色进行填充
	17.读取ILI9341 GRAN 的一个像素数据
	18.获取 ILI9341 显示器上某一个坐标点的像素数据
	19.在 ILI9341 显示器上使用 Bresenham 算法画线段 、矩形、圆、一个英文字母、英文字符串（沿x轴方向/沿y轴方向）
	20.设置英文字体类型
	21.获取当前字体类型
	22.设置LCD的前景（字体）及背景颜色
	23.获取LCD的前景(字体)及背景颜色

<main.c>

主函数
	1.初始化LCD
	2.初始化串口，发送提示信息
	3.设置扫描模式为模式6
	4.调用 LCD_Test 函数显示各种图形进行测试 

液晶效果测试函数

	1.设置延时显示变量，设置当前字体类型，设置前景色和背景色，然后清屏
	2.在对应行显示字符串
	2.把Count ：testCNT转变成字符串到disbuff中
	3.清除对应一行的文字，把disbuff中的内容显示查出来
	4.清除对应一行的文字，设置前景色，显示对应文字
	5.设置前景色，开始画线，延时一段时间，然后清屏
	6.开始画矩形，画圆，画直线

简单延时函数

 * 在实际测试中，若先初始化串口再初始化液晶屏，会导致错误，原因不明。所以在应用时，注意先初始化液晶屏再初始化串口
	
    对于不同的 MCU 屏幕芯片以上的教程流程都适用，一般差异在于配置参数不同，同型号芯片也
    可能因为厂商不同的批次需要调整部分配置参数。
    现程序兼体做法：
    LCD 初始化函数 ILI9341_REG_Config() 里先用 ILI9341_ReadID() 读取 LCD 控制芯片的 ID，并
    使用一个变量 lcdid 来保存它，然后判断对比此时实际屏幕的型号从而执行不同的配置参数过程，
    配置参数一般也是由屏幕厂商提供，有需要时再微调。
    另外有一个比较重要的函数是 ILI9341_GramScan()，在这个函数里面我们也根据变量 lcdid 做了
    不同的配置，比如配置 LCD 显示的颜色模式。
    
/*********************************************************************************************/

【*】 联系我们

-野火官网  :https://embedfire.com
-野火论坛  :http://www.firebbs.cn
-野火商城  :https://yehuosm.tmall.com
-野火资料下载中心 :http://doc.embedfire.com/products/link

/*********************************************************************************************/
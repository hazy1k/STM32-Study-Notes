
/*********************************************************************************************/
【*】程序简介

-工程名称：GPIO输入——按键检测
-实验平台: 野火STM32-F103 指南者 开发板 
-ST固件库版本：3.5.0

【 ！】功能简介：
通过改变按键的状态，来控制LED 灯


【*】注意事项：
1.当按下RESET键后，KEY1键没有按下时，只按下KEY2键灯不会熄灭，只会改变颜色
2.当灯熄灭状态下，再控制按键可以清楚体验到按键控制灯的亮灭


【 ！】实验操作：
编译并下载程序到开发板并复位，LED灯点亮，按下K1键，LED灯熄灭，再按下KEY2键，灯点亮

/*********************************************************************************************/


【*】 引脚分配
按键：
	KEY1<--->PA0
				开始时，按键未按下时处于低电平状态
	KEY2<--->PC13
	
LED：
	LED_R	<-----> PB5
	LED_G<-----> PB0
	LED_B	<-----> PB1

	对应引脚低电平则LED灯亮。
	
【*】程序描述：

< bsp_key.h >

	1.宏定义按键对应的GPIO端口，GPIO时钟，GPIO引脚
	2.把按键的常用状态（按下、断开）定义成宏



< bsp_key.c >

- 按键GPIO初始化

	1.引用结构体
	2.开启按键的GPIO对应的外设时钟
	3.设置引脚、模式
	4.初始化GPIO（根据设定参数配置 GPIO）

- 检测按键的状态
	
	1.定义Key_Scan函数用于扫描按键状态
	2.利用GPIO_ReadInputDataBit函数（STM32标准库提供）获取GPIO引脚的输入电平
	3.判断GPIO_ReadInputDataBit的返回值是否与自定义的宏KEY_ON一致，一致则循环检测按键是否释放，按键释放后则返回一个KEY_ON



<main.c>

	1.调用初始化LED GPIO函数，初始化LED端口
	2.调用按键GPIO初始化函数，初始化按键
	3.循环检测按键状态，当检测到按键按下状态时反转LED



PS：其中，bsp_led.h  、bsp_led.c 沿用了之前  《使用固件库点亮LED灯》中的程序

< bsp_led.h >  

	1.宏定义LED灯对应的GPIO端口，GPIO时钟，GPIO引脚
	2.把LED的常用状态（亮、灭、状态反转）也直接定义成宏
	3.把控制R、G、B灯的不同开关状态混出不同的颜色对应的状态定义成宏

< bsp_led.c >     

- LED GPIO初始化

	1.引用结构体
	2.开启GPIO对应的外设时钟
	3.设置引脚、模式、速度
	4.初始化GPIO（根据设定参数配置 GPIO）
	5.关闭所有的LED灯



/*********************************************************************************************/

【*】 联系我们

-野火官网  :https://embedfire.com
-野火论坛  :http://www.firebbs.cn
-野火商城  :https://yehuosm.tmall.com/
-野火资料下载中心 :http://doc.embedfire.com/products/link

/*********************************************************************************************/